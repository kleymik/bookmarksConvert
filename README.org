* Introduction


Way back in the mists of time, browser bookmarks and favourites were
stored in directory structures as individual files (e.g. with a ".url"
extension).  These could be managed and searched just like any other
files and folders. Now they tend to be stored in sqlite and exported
into html or json. This program can convert any of these formats
"back" into a file hierarchy.

:          bmksConvert.py

Convert bookmarks/favorites from source format (html, json, or sqlite)
and create corresponding nested folders and files by depth-first-traversal ("dft")
 - file name is bookmark simplified name, with ".url" as extension
 - inside the file are the bookmark details:
     - the exact name of the bookmark (the title of the html document it points to)
     - dates (added, modified,last_visited)
     - any other details
 - bookmark last_visited date is used to set modification of file name
   so that tools like "find" can be used, e.g

: find ./ -name '*foo*.url' -mtime +100 


* Usage 

: bmksConvert.py bookmarks.[html|json|slqlite] [rootfolderWriteAreaPath]

    bookmarks.[html|json|slqlite] - an input file containing bookmarks/favorites in one of these formats

    rootfolderWriteAreaPath - a path to a directory inside which the hierarchy of bookmarks will be created as subfolders and files
        if omitted, the bookmark data will be printed to stdout in org-mode format (no files or folders will be created)

For example:

:     ./bmksConvert.py bmArchive/html/bookmarks_20070817.html
:     ./bmksConvert.py bmArchive/json/bookmarks_20080907.json      ./testArea/json
:     ./bmksConvert.py bmArchive/sqlite/firefox_places_2021.sqlite ./testArea/sqlite


* python library dependencies

json, sqlite3, lxml, unicodedata, subprocess

* See Also

http://bookmark-merger.sourceforge.net/

https://github.com/johnpi/Bookmark_Merger


* TO DO




